VM201 TCP protocol


/******************************************************************************
* Generic TCP Protocol description
*  Packet   : <STX><LEN><CMD><data_1>...<data_n><CHECKSUM><ETX>
*  STX      : 0x0F
*  LEN      : number of bytes in packet incl. STX & CHECKSUM
*  CMD      : command byte
*  data_x   : optional data bytes
*  CHECKSUM : two-complement of the sum of all previous bytes in the packet
*  ETX      : 0x04
*
* 1a.At opening a connection and no authentication is needed there will be send:
*   - logged in successfully:
*       <STX><5><CMD_LOGGED_IN><CHECKSUM><ETX>
* 1b.At opening a connection and authentication is needed there will be send:
*   - authentication needed:
*       <STX><5><CMD_AUTH><CHECKSUM><ETX>
*   the client will answer with username and password (max 8 characters):
*       - username:
*           <STX><14><CMD_USERNAME><char1 of username>...<char9 of username><CHECKSUM><ETX>
*       - password:
*           <STX><14><CMD_PASSWORD><char1 of password>...<char9 of password><CHECKSUM><ETX>
*       if the username and password are invalid the following packets will be send:
*           - access denied:
*               <STX><5><CMD_ACCESS_DENIED><CHECKSUM><ETX>
*           - session closed:
*               <STX><5><CMD_CLOSED><CHECKSUM><ETX>
*           - the client will be disconnected
*       if the username and password are valid the following packets will be send:
*           - logged in successfully:
*               <STX><5><CMD_LOGGED_IN><CHECKSUM><ETX>
*
* 2.After successfully logged in the names (max 16 characters) of the 8 output channels and input will be send:
*   - channel names:
*       <STX><22><CMD_NAME><Channelnr><char1 name>...<char16 of name><CHECKSUM><ETX>
*
* 3.The status will be send:
*   - output, timer & input status:
*       <STX><8><CMD_STATUS><output status><output timer status><input status><CHECKSUM><ETX>
*               output status bits 7...0 = channels 8...1 ; bit=0 OFF; bit=1 ON
*               output timer status bits 7...0 = timer channels 8...1 ; bit=0 DISABLED; bit=1 ENABLED
*               input status bit 0 = input channel;  bit=0 OFF; bit=1 ON
*
* 4.Now we are listening to the following commands from the client:
*   - status request:
*       <STX><5><CMD_STATUS_REQ><CHECKSUM><ETX>
*   - switch an output channel ON:
*       <STX><6><CMD_ON><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 switch channel ON
*   - switch an output channel OFF:
*       <STX><6><CMD_OFF><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 switch channel OFF
*   - toggle an output channel:
*       <STX><6><CMD_TOGGLE><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 toggle channel
*   - pulse an output channel:
*       <STX><8><CMD_PULSE><channels><pulsetime><units><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 pulse channel
*           pulse time: 1...99
*           units: 's'= seconds; 'm' = minutes; 'h' = hours
*   - update all output channels:
*       <STX><6><CMD_UPDATE><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 switch channel OFF; bit=1 switch channel ON
*   - enable an output channel timer:
*       <STX><6><CMD_TMR_ENA><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 switch channel ON
*   - disable an output channel timer:
*       <STX><6><CMD_TMR_DIS><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 switch channel OFF
*   - toggle an output channel timer:
*       <STX><6><CMD_TMR_TOGGLE><channels><CHECKSUM><ETX>
*           channel bits 7...0 = channels 8...1 ; bit=0 no change ; bit=1 toggle channel
*   - connection closed:
*       <STX><5><CMD_CLOSED><CHECKSUM><ETX>
*
* 5.Every time the status changes it will be send an update to the client
*
*
******************************************************************************/

#define MIN_GENERIC_TCP_PACKET_SIZE 5
#define MAX_GENERIC_TCP_PACKET_SIZE 22

#define     STX                     0x02
#define     ETX                     0x03
#define     CMD_AUTH                'A'    // connected with authentication needed
#define     LEN_CMD_AUTH            5
#define     CMD_USERNAME            'U'    // connected with authentication needed
#define     LEN_CMD_USERNAME        14
#define     CMD_PASSWORD            'W'    // connected with authentication needed
#define     LEN_CMD_PASSWORD        14
#define     CMD_LOGGED_IN           'L'    // successfully logged in
#define     LEN_CMD_LOGGED_IN       5
#define     CMD_ACCESS_DENIED       'X'    // access denied
#define     LEN_CMD_ACCESS_DENIED   5
#define     CMD_CLOSED              'C'    // connection closed
#define     LEN_CMD_CLOSED          5
#define     CMD_NAME                'N'    // channel name
#define     LEN_CMD_NAME            22
#define     CMD_STATUS_REQ          'R'    // status request
#define     LEN_CMD_STATUS_REQ      5
#define     CMD_STATUS              'S'    // output, timer & input channel status
#define     LEN_CMD_STATUS          8
#define     CMD_ON                  'O'    // switch channel on
#define     LEN_CMD_ON              6
#define     CMD_OFF                 'F'    // switch channel off
#define     LEN_CMD_OFF             6
#define     CMD_TOGGLE              'T'    // toggle channel
#define     LEN_CMD_TOGGLE          6
#define     CMD_PULSE               'P'    // pulse channel
#define     LEN_CMD_PULSE           8
#define     CMD_UPDATE              'V'    // update all channels
#define     LEN_CMD_UPDATE          6
#define     CMD_TMR_ENA             'E'    // enable timer channel programs
#define     LEN_CMD_TMR_ENA         6
#define     CMD_TMR_DIS             'D'    // disable timer channel programs
#define     LEN_CMD_TMR_DIS         6
#define     CMD_TMR_TOGGLE          'G'    // toggle timer channel programs
#define     LEN_CMD_TMR_TOGGLE      6
